<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="lgvn13460" name="DashboardTest.LoginTest" tests="1" failures="0" timestamp="9 May 2016 06:14:49 GMT" time="0.000" errors="1">
  <testcase name="Login1" time="0.000" classname="DashboardTest.LoginTest">
    <error type="org.openqa.selenium.WebDriverException" message="An unknown server-side error occurred while processing the command. Original error: Could not find button to launch Safari. Make sure you are using the latest version of SafariLauncher that appium is using (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 18.88 seconds
Build info: version: &#039;2.52.0&#039;, revision: &#039;4c2593cfc3689a7fcd7be52549167e5ccc93ad28&#039;, time: &#039;2016-02-11 11:22:43&#039;
System info: host: &#039;lgvn13460&#039;, ip: &#039;192.168.56.1&#039;, os.name: &#039;Windows 7&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;6.1&#039;, java.version: &#039;1.8.0_91&#039;
Driver info: io.appium.java_client.ios.IOSDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not find button to launch Safari. Make sure you are using the latest version of SafariLauncher that appium is using (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 18.88 seconds
Build info: version: '2.52.0', revision: '4c2593cfc3689a7fcd7be52549167e5ccc93ad28', time: '2016-02-11 11:22:43'
System info: host: 'lgvn13460', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: io.appium.java_client.ios.IOSDriver
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:180)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:158)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:109)
	at io.appium.java_client.ios.IOSDriver.<init>(IOSDriver.java:23)
	at com.loginium.driver.mobile.MobileIOSDriver.<init>(MobileIOSDriver.java:21)
	at com.loginium.driver.factory.MobileDriverFactory.initWebDriver(MobileDriverFactory.java:18)
	at com.loginium.driver.factory.DriverFactory.createWebDriver(DriverFactory.java:18)
	at com.loginium.driver.DriverManager.createWebDriver(DriverManager.java:42)
	at DashboardTest.TestBase.beforeMethod(TestBase.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:589)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
    </error>
  </testcase> <!-- Login1 -->
</testsuite> <!-- DashboardTest.LoginTest -->
